#!/bin/bash

set -eu

echo "Preparing to release new version."

if ! which gh &>/dev/null; then
  echo "The GitHub CLI could not be found. Please install it before continuing."
  echo "https://cli.github.com/manual/"
  echo "And run 'gh auth login'"
  exit 1
fi

version=$(ruby -e "print File.read('Cargo.toml').scan(/version = \"(.*)\"/).first.first")
if git tag | grep v$version &>/dev/null; then
  echo "Tag $version already exists. Exiting."
  echo "Please make sure to first update the version in the Cargo.toml file."
  echo "Also don't forget to update the CHANGELOG.md file."
  exit 1
fi

read -p "This will publish v$version. Are you sure? [y/n] " choice
case "$choice" in
  y|Y)
    echo "Publishing v$version!"
    ;;
  *)
    echo "Exiting..."
    exit 1
    ;;
esac

# Build releases for all targets
script/build

function strip_local() {
  target=$1
  echo "Stripping release $target"
  (
    cd dist/$target
    strip lintje
  )
}

function strip_in_container() {
  target=$1
  image=$2
  options=$3
  echo "Stripping release $target"
  (
    cd dist/$target
    docker run --rm -it \
      -v "$(pwd):/dist" \
      -w "/dist" \
      $options \
      tombruijn/lintje-$image:build \
      strip lintje
  )
}

function archive() {
  target=$1
  echo "Archiving release $target"
  (
    cd dist/$target
    tar -cvzf "../$target.tar.gz" lintje
  )
}

function add_checksum() {
  target=$1
  echo "Generating checksum for $target"
  (
    cd dist
    shasum -a 256 $target.tar.gz >> checksums_256.txt
  )
}

function build_docker_image() {
  image=$1
  options=$2
  (
    cd support/docker/
    docker build \
      $options \
      -f Dockerfile.$image \
      -t tombruijn/lintje-$image:build \
      .
  )
}

rm -f dist/checksums_256.txt
touch dist/checksums_256.txt
echo
strip_local x86_64-apple-darwin
archive x86_64-apple-darwin
add_checksum x86_64-apple-darwin
echo
strip_local aarch64-apple-darwin
archive aarch64-apple-darwin
add_checksum aarch64-apple-darwin
echo
build_docker_image ubuntu-x86_64-development "--platform linux/amd64"
strip_in_container x86_64-unknown-linux-gnu ubuntu-x86_64-development "--platform linux/amd64"
archive x86_64-unknown-linux-gnu
add_checksum x86_64-unknown-linux-gnu
echo
build_docker_image ubuntu-aarch64-development "--platform linux/arm64/v8"
strip_in_container aarch64-unknown-linux-gnu ubuntu-aarch64-development "--platform linux/arm64/v8"
archive aarch64-unknown-linux-gnu
add_checksum aarch64-unknown-linux-gnu

git tag v$version
git push origin main v$version
echo "Creating release on GitHub. Please follow the prompts."
gh release create v$version dist/*.tar.gz dist/checksums_256.txt --title "Release $version"

echo "Please update the Homebrew tap next: https://github.com/tombruijn/homebrew-lintje"
